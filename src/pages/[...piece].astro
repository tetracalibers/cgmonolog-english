---
import AudioPlayer from "../components/audio-player/AudioPlayer.svelte"
import HtmlDocument from "../layout/HtmlDocument.astro"
import PuzzleIcon from "~icons/game-icons/jigsaw-piece"
import EducationIcon from "~icons/material-symbols-light/history-edu"
import Header from "../components/header/Header.astro"
import SpeakerProvider from "$/components/audio-player/SpeakerProvider.svelte"
import WithAnkiMode from "$/components/WithAnkiMode.svelte"
import { pager } from "$/lib/slug"
import { getPieces } from "$/lib/collection"
import { render } from "astro:content"

export async function getStaticPaths() {
  const entries = await getPieces()
  return entries.map((entry, i) => {
    const { prev, next } = pager(entries, i)
    return {
      params: { piece: entry.id },
      props: {
        piece: entry,
        next,
        prev,
        progress: Math.floor((i / (entries.length - 1)) * 100)
      }
    }
  })
}

const { piece, next, prev, progress } = Astro.props
const { Content } = await render(piece)
---

<HtmlDocument title={piece.data.shape}>
  <Header prev={prev} next={next} progress={progress} type={piece.data.type} />
  <div class="container">
    <div class="heading-container">
      <div class={`heading-icon --${piece.data.type}`}><PuzzleIcon /></div>
      <h2 class="heading">
        {piece.data.shape}
      </h2>
      {piece.data.meaning && <div class="meaning">{piece.data.meaning}</div>}
    </div>
    <div class="content-wrapper">
      <EducationIcon />
      <Content />
    </div>
    <WithAnkiMode client:load>
      <SpeakerProvider client:only="svelte">
        <div class="items-container">
          {
            piece.data.examples.map((example, i) => (
              <div class="item">
                <div class="item-lang">
                  <div class="item-sentence">
                    {example.scene && <div class="item-scene">{example.scene}</div>}
                    <div class="item-main">
                      <div class="--en">{example.en}</div>
                      <div class="--ja">{example.ja}</div>
                    </div>
                  </div>
                  <div class="item-player">
                    <AudioPlayer text={example.en} client:only="svelte" />
                  </div>
                </div>
              </div>
            ))
          }
        </div>
      </SpeakerProvider>
    </WithAnkiMode>
  </div>
</HtmlDocument>

<style>
  .container {
    display: grid;
    gap: 2rem;
    padding-block: 3rem;
  }

  .heading-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
  .heading-icon {
    display: flex;
  }
  .heading {
    font-weight: 400;
    font-size: inherit;
    margin: 0;
    text-align: center;
    text-wrap: balance;
  }
  .meaning {
    font-size: 0.875rem;
    line-height: 1.25rem;
    opacity: 0.9;
  }

  .content-wrapper {
    display: grid;
    place-items: center;
    gap: 1rem;
    padding: 1.5rem;
    margin-inline: 1.5rem;
    line-height: 1.7;
    border: 2px double var(--slate-400);
    position: relative;
  }
  .content-wrapper :global(svg) {
    position: absolute;
    left: -1.5rem;
    top: -1.5rem;
    width: 3rem;
    height: 3rem;
    color: var(--slate-400);
  }
  .content-wrapper :global(:is(p, ul)) {
    margin: 0;
  }

  .items-container {
    display: grid;
    gap: 1rem;
  }
  .item {
    display: grid;
    gap: 1rem;
    padding: 1.5rem;
  }
  .item-lang {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    align-items: center;
    justify-content: space-between;
    /* border: 1px solid var(--slate-300);
    border-inline-start-width: 0;
    border-inline-end-width: 0; */
    padding: 1rem;
  }
  .item-sentence {
    flex-basis: calc(64rem - 100%);
    flex-grow: 1;
  }
  .item-scene {
    font-size: 0.8rem;
    color: var(--slate-400);
  }
  .item-player {
    margin-inline-start: auto;
  }
  .item-main {
    display: grid;
    gap: 0.75rem;
  }
  .item-sentence {
    display: grid;
    gap: 1rem;
  }

  .player-wrapper {
    width: fit-content;
    justify-self: center;
  }

  .--en {
    font-size: 1.2em;
  }
  .--ja {
    font-weight: 300;
    font-size: 0.9em;
  }
  :global([data-anki-mode="true"]) .--ja {
    background-color: #ff8dc7;
    color: #ff8dc7;
  }

  .--large {
    color: var(--rose-400);
  }
  .--medium {
    color: var(--green-400);
  }
  .--small {
    color: var(--sky-400);
  }
  .--single {
    color: var(--orange-400);
  }
  .--more {
    color: var(--violet-400);
  }
  .--word {
    color: var(--slate-300);
  }
</style>
